{"version":3,"sources":["jarvis.js"],"names":["Jarvis","$","_","Bloodhound","i","arguments","length","test","_typeof","console","error","concat","inputFocused","document","activeElement","tagName","contentEditable","iconStore","store","attachment","icon","category","type","nav_menu","nav_menu_item","page","post","key","post_format","post_tag","remove","term","this","Suggestion","data","undefined","prop","_classCallCheck","classes","href","iconClasses","get","iconKey","iconStyle","iconType","kind","prefix","title","hasOwnProperty","attributes","indexOf","push","setIcon","_createClass","value","storedIcon","MenuSuggestion","_Suggestion","link","_this","section","jQuery","closest","first","find","clone","children","end","text","is","$wpMenuIcon","$wpMenuLink","linkHref","attr","params","substr","split","pairs","computedStyle","hasClass","window","getComputedStyle","backgroundImage","atob","replace","trim","filter","c","shift","style","getElementById","createElement","id","head","appendChild","css","fontFamily","content","createTextNode","add","_inherits","templates","suggestion","template","_this2","settings","instants","s","hotkey","searchurl","opened","suggestions","ctrlKey","node","className","theme","modal","overlay","addEventListener","close","search","loading","isJarvisUrl","url","readyState","init","bind","_this3","elem","Array","isArray","map","inst","e","preventDefault","stopPropagation","on","open","currentTarget","getAttribute","event","jqXHR","setRequestHeader","ajaxComplete","parentNode","removeChild","display","body","$search","typeahead","hint","highlight","minLength","classNames","cursor","dataset","empty","input","selectable","wrapper","name","limit","source","local","obj","whitespace","queryTokenizer","tokenizers","remote","transform","response","item","focus","select","_this5","ajax","status"],"mappings":"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","file":"jarvis.js","sourcesContent":["const Jarvis = ( function( $, _, Bloodhound ) {\r\n\r\n\t// cut the mustard - bail if any of our dependencies are missing\r\n\tfor( let i = 0; i < arguments.length; i++ ) {\r\n\t\tif ( ! /function|object/.test( typeof arguments[i] ) ) {\r\n\t\t\tif ( typeof console === 'object' && typeof console.error === 'function' ) {\r\n\t\t\t\tconsole.error( `Jarvis dependency is missing: ${arguments[i]}` );\r\n\t\t\t}\r\n\t\t\treturn function() {};\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * function for determining if the quick key should fire\r\n\t */\r\n\tconst inputFocused = function() {\r\n\t\treturn /INPUT|SELECT|TEXTAREA/.test( document.activeElement.tagName ) || document.activeElement.contentEditable === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Object to store icons data by key\r\n\t */\r\n\tlet iconStore = {\r\n\t\tstore: {\r\n\t\t\tattachment: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-admin-media',\r\n\t\t\t},\r\n\t\t\tcategory: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-category',\r\n\t\t\t},\r\n\t\t\tnav_menu: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-menu',\r\n\t\t\t},\r\n\t\t\tnav_menu_item: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-admin-appearance',\r\n\t\t\t},\r\n\t\t\tpage: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-admin-page',\r\n\t\t\t},\r\n\t\t\tpost: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-admin-post',\r\n\t\t\t},\r\n\t\t\tpost_tag: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-tag',\r\n\t\t\t},\r\n\t\t\tpost_format: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-format-standard',\r\n\t\t\t},\r\n\t\t\tterm: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-category',\r\n\t\t\t},\r\n\t\t\tuser: {\r\n\t\t\t\ttype: 'dashicon',\r\n\t\t\t\ticon: 'dashicons-admin-users',\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\tadd: function( key, type, icon ) {\r\n\t\t\tif ( ! this.store[ key ] ) {\r\n\t\t\t\tthis.store[ key ] = {\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\ticon: icon,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn this.store[ key ];\r\n\t\t},\r\n\r\n\t\tremove: function( key ) {\r\n\t\t\tif ( this.store[ key ] ) {\r\n\t\t\t\tdelete this.store[ key ];\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tget: function( key ) {\r\n\t\t\treturn ( typeof this.store[key] === 'object' ) ? this.store[key] : false;\r\n\t\t},\r\n\t};\r\n\r\n\tclass Suggestion {\r\n\r\n\t\t/**\r\n\t\t * Base Suggestion class constrcutor that contains the suggestion model\r\n\t\t *\r\n\t\t * @param object data\r\n\t\t * @param string type\r\n\t\t */\r\n\t\tconstructor( data = {}, type = '' ) {\r\n\t\t\tthis.attributes  = [];\r\n\t\t\tthis.classes     = [];\r\n\t\t\tthis.href        = '';\r\n\t\t\tthis.icon        = null;\r\n\t\t\tthis.iconClasses = [ 'jarvis__icon' ];\r\n\t\t\tthis.iconKey     = '';\r\n\t\t\tthis.iconStyle   = '';\r\n\t\t\tthis.iconType    = 'dashicon';\r\n\t\t\tthis.kind        = '';\r\n\t\t\tthis.prefix      = '';\r\n\t\t\tthis.section     = '';\r\n\t\t\tthis.title       = '';\r\n\t\t\tthis.type        = '';\r\n\r\n\t\t\tfor ( let prop in data ) {\r\n\t\t\t\tif ( data.hasOwnProperty( prop ) ) {\r\n\t\t\t\t\tthis[prop] = data[prop];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( typeof this.type === 'string' && this.type.length > 0 && this.attributes.indexOf( this.type ) === -1 ) {\r\n\t\t\t\tthis.attributes.push( this.type );\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.iconKey && this.iconType && this.icon && ! iconStore.get( this.iconKey ) ) {\r\n\t\t\t\ticonStore.add( this.iconKey, this.iconType, this.icon );\r\n\t\t\t}\r\n\r\n\t\t\tthis.setIcon( this.iconKey );\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Set the icon of this suggestion to the icon key in the icon store\r\n\t\t *\r\n\t\t * @param string iconKey\r\n\t\t */\r\n\t\tsetIcon( iconKey = '' ) {\r\n\t\t\t// image icon - usually unique per suggestion - no reason to cache it\r\n\t\t\tif ( this.iconType === 'image' && this.icon ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! iconStore.get( iconKey ) && this.kind ) {\r\n\t\t\t\tswitch( this.kind ) {\r\n\t\t\t\t\tcase 'term':\r\n\t\t\t\t\t\ticonKey = 'post_tag';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'post':\r\n\t\t\t\t\t\ticonKey = 'post';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'user':\r\n\t\t\t\t\t\ticonKey = 'user';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet storedIcon = iconStore.get( iconKey );\r\n\r\n\t\t\tif ( storedIcon ) {\r\n\t\t\t\tthis.iconKey  = iconKey;\r\n\t\t\t\tthis.iconType = storedIcon.type;\r\n\t\t\t\tthis.icon     = storedIcon.icon;\r\n\r\n\t\t\t\tif ( this.iconType === 'dashicon' ) {\r\n\t\t\t\t\tthis.iconClasses.push( 'dashicons-before' );\r\n\r\n\t\t\t\t\tif ( this.iconClasses.indexOf( this.icon ) === -1 ) {\r\n\t\t\t\t\t\tthis.iconClasses.push( this.icon );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.icon;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tclass MenuSuggestion extends Suggestion {\r\n\t\t/**\r\n\t\t * Heavily modify the base suggestion model for menu items\r\n\t\t */\r\n\t\tconstructor( link ) {\r\n\t\t\tsuper();\r\n\r\n\t\t\tthis.link    = link;\r\n\t\t\tthis.section = jQuery( this.link ).closest( 'li.menu-top' ).first();\r\n\t\t\tthis.prefix  = this.section.find( '.wp-menu-name' ).clone().children().remove().end().text();\r\n\t\t\tthis.kind    = 'menu';\r\n\t\t\tthis.type    = this.kind;\r\n\t\t\tthis.href    = link.href;\r\n\r\n\t\t\tthis.attributes.push( this.type );\r\n\t\t\tthis.classes.push( `jarvis__suggestion--${this.kind}`);\r\n\r\n\t\t\tif ( jQuery( this.link ).is( '.wp-submenu a' ) ) {\r\n\t\t\t\tthis.title = `${this.prefix} » ${jQuery( this.link ).clone().children().remove().end().text()}`;\r\n\t\t\t} else {\r\n\t\t\t\tthis.title = this.prefix;\r\n\t\t\t}\r\n\r\n\t\t\tlet $wpMenuIcon = this.section.find( '.wp-menu-image' ).first();\r\n\r\n\t\t\t// try and get the icon key from the top level link post_type= param of the link href so it matches up to remote data\r\n\t\t\tlet $wpMenuLink = this.section.find('> a').first();\r\n\t\t\tif ( $wpMenuLink.length > 0 ) {\r\n\t\t\t\tlet linkHref = $wpMenuLink.attr('href');\r\n\t\t\t\tlet qsIndex = linkHref.indexOf('?');\r\n\r\n\t\t\t\tif ( qsIndex > -1 ) {\r\n\t\t\t\t\tlet qs = linkHref.substr( linkHref.indexOf('?') + 1 );\r\n\t\t\t\t\tlet params = qs.split(\"&\");\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < params.length; i++ ) {\r\n\t\t\t\t\t\tlet pairs = params[i].split('=');\r\n\t\t\t\t\t\tif ( pairs.length === 2 && pairs[0] === 'post_type' && pairs[1].length > 0 ) {\r\n\t\t\t\t\t\t\tthis.iconKey = pairs[1];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! this.iconKey ) {\r\n\t\t\t\tthis.iconKey = this.section.attr('id');\r\n\t\t\t}\r\n\r\n\t\t\tthis.classes.push( `jarvis__suggestion--${this.iconKey}`);\r\n\r\n\t\t\tif ( $wpMenuIcon.length > 0 ) {\r\n\t\t\t\tif ( ! iconStore.get( this.iconKey ) ) {\r\n\t\t\t\t\tlet computedStyle;\r\n\r\n\t\t\t\t\tswitch( true ) {\r\n\t\t\t\t\t\tcase this.section.find('.wp-menu-image img').length > 0:\r\n\t\t\t\t\t\t\t// img tag inside icon - old school\r\n\t\t\t\t\t\t\tthis.iconType = 'image';\r\n\t\t\t\t\t\t\tthis.icon = this.section.find('.wp-menu-image img').first().attr('src');\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase $wpMenuIcon.hasClass( 'svg' ):\r\n\t\t\t\t\t\t\t// base64 encoded svg\r\n\t\t\t\t\t\t\tcomputedStyle = window.getComputedStyle( $wpMenuIcon.get( 0 ) );\r\n\t\t\t\t\t\t\tif ( /^url\\(\"data:image\\/svg\\+xml\\;base64,/.test( computedStyle.backgroundImage ) ) {\r\n\t\t\t\t\t\t\t\tthis.iconType = 'svg';\r\n\t\t\t\t\t\t\t\tthis.icon  = atob( computedStyle.backgroundImage.replace( /^url\\(\"data:image\\/svg\\+xml\\;base64,/, '' ).replace( /\\\"\\)$/, '' ) );\r\n\t\t\t\t\t\t\t\tthis.icon  = this.icon.replace( /<\\?xml [^>]+\\?>/g, '' ).replace( /\\sid=\"[^\\\"]+\"/g, '' ).replace( /<!--[\\s\\S]*?-->/g, '' ).replace( /<(title|desc|defs)>[^<]+?<\\/(title|desc|defs)>/g, '' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase $wpMenuIcon.hasClass( 'dashicons-before' ):\r\n\r\n\t\t\t\t\t\t\tcomputedStyle = window.getComputedStyle( $wpMenuIcon.get( 0 ), ':before' );\r\n\r\n\t\t\t\t\t\t\tif ( computedStyle.fontFamily === 'dashicons' ) {\r\n\t\t\t\t\t\t\t\t// proper dashicon\r\n\t\t\t\t\t\t\t\tthis.iconType = 'dashicon';\r\n\t\t\t\t\t\t\t\tthis.icon = $wpMenuIcon.attr('class').trim().split(' ').filter( c => [ 'dashicons-before', 'wp-menu-image' ].indexOf(c) === -1 ).shift();\r\n\t\t\t\t\t\t\t\tthis.iconClasses.push( this.icon );\r\n\t\t\t\t\t\t\t\tthis.iconClasses.push( 'dashicons-before' );\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// custom icons on top of a dashicon using css (woocommerce does this)\r\n\t\t\t\t\t\t\t\tlet style = document.getElementById( 'jarvis_style' );\r\n\t\t\t\t\t\t\t\tif ( ! style ) {\r\n\t\t\t\t\t\t\t\t\tstyle = document.createElement('style');\r\n\t\t\t\t\t\t\t\t\tstyle.type = 'text/css';\r\n\t\t\t\t\t\t\t\t\tstyle.id = 'jarvis_style';\r\n\t\t\t\t\t\t\t\t\tdocument.head.appendChild(style);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet css = `.jarvis__suggestion--${this.iconKey} .jarvis__icon::before { font-family: ${computedStyle.fontFamily}; content: ${computedStyle.content}; }` + \"\\n\";\r\n\r\n\t\t\t\t\t\t\t\tstyle.appendChild( document.createTextNode(css) );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ticonStore.add( this.iconKey, this.iconType, this.icon );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setIcon( this.iconKey );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * underscore template for typeahead suggestion\r\n\t */\r\n\tconst templates = {\r\n\t\tsuggestion: _.template( `\r\n\t\t\t<span class=\"<% print( classes.join( ' ' ) ) %>\">\r\n\t\t\t\t<a href=\"<%= href %>\" data-type=\"<%= type %>\">\r\n\t\t\t\t\t<span class=\"<% print( iconClasses.join( ' ' ) ) %>\" style='<%= iconStyle %>' title=\"<%= prefix %>\">\r\n\t\t\t\t\t<% if ( iconType === 'image' ) { %>\r\n\t\t\t\t\t\t<img src=\"<%= icon %>\" alt=\"<%= title %>\">\r\n\t\t\t\t\t<% } else if ( iconType === 'svg' ) { %>\r\n\t\t\t\t\t\t<%= icon %>\r\n\t\t\t\t\t<% } %>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class=\"jarvis__title\" title=\"<%- title %>\"><%- title %></span>\r\n\t\t\t\t\t<% if ( attributes ) { %>\r\n\t\t\t\t\t\t<span class=\"jarvis__pills\">\r\n\t\t\t\t\t\t\t<% _.each( attributes, function(attr) { %>\r\n\t\t\t\t\t\t\t\t<span class=\"jarvis__pill\"><%= attr %></span>\r\n\t\t\t\t\t\t\t<% } ); %>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t<% } %>\r\n\t\t\t\t</a>\r\n\t\t\t</span>\r\n\t\t`)\r\n\t};\r\n\r\n\tclass Jarvis {\r\n\t\t/**\r\n\t\t * The main interface to Jarvis\r\n\t\t *\r\n\t\t * @param object settings\r\n\t\t * @param array instants\r\n\t\t */\r\n\t\tconstructor( settings = {}, instants = [] ) {\r\n\r\n\t\t\tthis.iconStore = iconStore;\r\n\r\n\t\t\t// default settings\r\n\t\t\tthis.settings = {\r\n\t\t\t\thotkey: '/',\r\n\t\t\t\tsearchurl: '/wp-json/jarvis/v1/search',\r\n\t\t\t};\r\n\r\n\t\t\t// merge constructor settings with defaults\r\n\t\t\tfor( const s in settings ) {\r\n\t\t\t\tif ( settings.hasOwnProperty( s ) ) {\r\n\t\t\t\t\tthis.settings[ s ] = settings[ s ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// internal flag for modal open/close\r\n\t\t\tthis.opened = false;\r\n\r\n\t\t\t// array for storing wordpress links as datums for autocomplete\r\n\t\t\tthis.suggestions = [];\r\n\r\n\t\t\t// hold the instant suggestions to get processed after the menu links\r\n\t\t\tthis.instants = instants;\r\n\r\n\t\t\t// the current search term to re-open the modal with the same term\r\n\t\t\tthis.term = '';\r\n\r\n\t\t\t// flag for whether the ctrlKey is currently pressed\r\n\t\t\tthis.ctrlKey = false;\r\n\r\n\t\t\t// outer jarvis node\r\n\t\t\tthis.node = document.createElement( 'div' );\r\n\t\t\tthis.node.className = `jarvis jarvis--${this.settings.theme}`;\r\n\t\t\tthis.node.id = 'jarvis';\r\n\r\n\t\t\t// modal node\r\n\t\t\tthis.modal = document.createElement( 'div' );\r\n\t\t\tthis.modal.className = 'jarvis__modal';\r\n\r\n\t\t\t// modal overlay node\r\n\t\t\tthis.overlay = document.createElement( 'div' );\r\n\t\t\tthis.overlay.className = 'jarvis__overlay';\r\n\t\t\tthis.overlay.addEventListener( 'click', () => this.close() );\r\n\r\n\t\t\t// search input node\r\n\t\t\tthis.search = document.createElement( 'input' );\r\n\t\t\tthis.search.type = 'text';\r\n\t\t\tthis.$search = $( this.search ); // jquery version for typeahead\r\n\r\n\t\t\t// add our internal nodes to the outer node\r\n\t\t\tthis.node.appendChild( this.overlay );\r\n\t\t\tthis.node.appendChild( this.modal );\r\n\t\t\tthis.modal.appendChild( this.search );\r\n\r\n\t\t\t// loading icon node\r\n\t\t\tthis.loading = document.createElement( 'i' );\r\n\t\t\tthis.loading.className = 'jarvis__loading';\r\n\r\n\t\t\t// does the url argument match the searchurl\r\n\t\t\tthis.isJarvisUrl = function( url ) {\r\n\t\t\t\treturn url.indexOf( this.settings.searchurl ) > -1;\r\n\t\t\t}\r\n\r\n\t\t\t// test if constructor was called after the page is loaded, or on DOMContentLoaded\r\n\t\t\tif ( /complete|loaded/.test( document.readyState ) ) {\r\n\t\t\t\tthis.init();\r\n\t\t\t} else {\r\n\t\t\t\tdocument.addEventListener( 'DOMContentLoaded', this.init.bind( this ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinit() {\r\n\t\t\t// scrape wordpress menu for sidebar links\r\n\t\t\t$( '#adminmenu a' ).each( ( i, elem ) => {\r\n\t\t\t\tthis.suggestions.push( new MenuSuggestion( elem ) );\r\n\t\t\t\treturn;\r\n\t\t\t} );\r\n\r\n\t\t\t// process the instant suggestions after the icons have been scraped\r\n\t\t\tif ( Array.isArray( this.instants ) ) {\r\n\t\t\t\tthis.suggestions = this.suggestions.concat( this.instants.map( inst => new Suggestion(inst) ) );\r\n\t\t\t}\r\n\r\n\t\t\t// Prevent Firefox from using quick search with the hotkey\r\n\t\t\tdocument.addEventListener( 'keydown', ( e ) => {\r\n\t\t\t\tif ( e.key === this.settings.hotkey && ! inputFocused() ) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t}\r\n\t\t\t}, true ); // use true for event capture\r\n\r\n\t\t\t// menu bar icon click\r\n\t\t\t$( document ).on( 'click', '#wp-admin-bar-jarvis_menubar_icon a', ( e ) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.open();\r\n\t\t\t} );\r\n\r\n\t\t\t// let the typeahead:selected event handle ctrl+click so it's consistent with keyboard ctrl+enter\r\n\t\t\t// prevent default for ajax actions\r\n\t\t\t$( document ).on( 'click', '.jarvis__suggestion a', ( e ) => {\r\n\t\t\t\tif ( e.ctrlKey === true || e.currentTarget.getAttribute('data-type') === 'ajax' ) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// record the ctrlKey status so we can use it in typeaheads custom triggered events\r\n\t\t\t$( document ).on( 'keydown keyup', '#jarvis-search', ( e ) => {\r\n\t\t\t\tthis.ctrlKey = e.ctrlKey;\r\n\t\t\t} );\r\n\r\n\t\t\t// listen for hotkey\r\n\t\t\t$( document ).on( 'keyup', ( e ) => {\r\n\t\t\t\t// handle esc key - must go before inputFocused check so we can close when jarvis search is focused\r\n\t\t\t\tif ( this.opened && e.key === 'Escape' ) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\tthis.close();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// return if editable field is focused\r\n\t\t\t\tif ( inputFocused() ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// open jarvis\r\n\t\t\t\tif ( ! this.opened && e.key === this.settings.hotkey ) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\treturn this.open();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// showing spinners & adding nonce headers\r\n\t\t\t$( document ).ajaxSend( ( event, jqXHR, settings ) => {\r\n\t\t\t\tif ( this.opened && this.isJarvisUrl( settings.url ) ) {\r\n\t\t\t\t\t// add our loading icon to the UI\r\n\t\t\t\t\tthis.modal.appendChild( this.loading );\r\n\t\t\t\t\t// add our nonce to the header so the rest api considers it a logged in request\r\n\t\t\t\t\tjqXHR.setRequestHeader( 'X-WP-Nonce', this.settings.nonce );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// hiding spinners\r\n\t\t\t$( document ).ajaxComplete( ( event, jqXHR, settings ) => {\r\n\t\t\t\tif ( this.opened && this.isJarvisUrl( settings.url ) && this.loading.parentNode ) {\r\n\t\t\t\t\t// hide our loading icon on ajaxComplete\r\n\t\t\t\t\tthis.loading.parentNode.removeChild( this.loading );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\topen() {\r\n\t\t\tthis.opened = true;\r\n\t\t\tdocument.body.appendChild( this.node ); // append our primary node to the body\r\n\r\n\t\t\tthis.$search.typeahead( {\r\n\t\t\t\thint      : true,\r\n\t\t\t\thighlight : true,\r\n\t\t\t\tminLength : 1,\r\n\t\t\t\tclassNames: {\r\n\t\t\t\t\tcursor    : 'jarvis__cursor',\r\n\t\t\t\t\tdataset   : 'jarvis__dataset',\r\n\t\t\t\t\tempty     : 'jarvis__empty',\r\n\t\t\t\t\thighlight : 'jarvis__highlight',\r\n\t\t\t\t\thint      : 'jarvis__hint',\r\n\t\t\t\t\tinput     : 'jarvis__input',\r\n\t\t\t\t\tmenu      : 'jarvis__menu',\r\n\t\t\t\t\topen      : 'jarvis__open',\r\n\t\t\t\t\tselectable: 'jarvis__selectable',\r\n\t\t\t\t\tsuggestion: 'jarvis__suggestion',\r\n\t\t\t\t\twrapper   : 'jarvis__wrap',\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tname: 'results',\r\n\t\t\t\tlimit: 10,\r\n\t\t\t\tdisplay: 'title',\r\n\t\t\t\tsource: new Bloodhound( {\r\n\t\t\t\t\tlocal: this.suggestions,\r\n\t\t\t\t\tdatumTokenizer: Bloodhound.tokenizers.obj.whitespace( 'title' ),\r\n\t\t\t\t\tqueryTokenizer: Bloodhound.tokenizers.whitespace,\r\n\t\t\t\t\tremote: {\r\n\t\t\t\t\t\turl: `${this.settings.searchurl}?q=%s`,\r\n\t\t\t\t\t\twildcard: '%s',\r\n\t\t\t\t\t\ttransform: ( response ) => {\r\n\t\t\t\t\t\t\tif ( Array.isArray( response ) ) {\r\n\t\t\t\t\t\t\t\treturn response.map( (data) => new Suggestion( data, 'remote' ) );\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn response;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}\r\n\t\t\t\t} ),\r\n\r\n\t\t\t\ttemplates: {\r\n\t\t\t\t\tsuggestion: ( data ) => templates.suggestion( data ),\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tthis.$search.on( 'typeahead:select', ( e, item ) => {\r\n\t\t\t\tif ( item.type === 'ajax' ) {\r\n\t\t\t\t\treturn this.ajax( item );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.ctrlKey ) {\r\n\t\t\t\t\twindow.open( item.href, '_blank' );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlocation.href = item.href;\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tthis.$search.on( 'keyup', () => {\r\n\t\t\t\tthis.term = this.search.value;\r\n\t\t\t} );\r\n\r\n\t\t\tthis.$search.typeahead( 'val', this.term );\r\n\t\t\tthis.$search.focus().select();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclose() {\r\n\t\t\tthis.opened = false;\r\n\t\t\tthis.node.parentNode.removeChild( this.node );\r\n\t\t\tthis.$search.typeahead( 'destroy' );\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoggle() {\r\n\t\t\treturn ( this.opened ) ? this.close() : this.open();\r\n\t\t}\r\n\r\n\t\tajax( item ) {\r\n\t\t\tthis.modal.appendChild( this.loading );\r\n\r\n\t\t\t$.ajax( {\r\n\t\t\t\turl: item.href,\r\n\t\t\t\tsuccess: ( data, status, jqXHR ) => {\r\n\t\t\t\t\tthis.term = '';\r\n\t\t\t\t\tif ( this.loading.parentNode ) {\r\n\t\t\t\t\t\tthis.modal.removeChild( this.loading );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.close();\r\n\t\t\t\t},\r\n\t\t\t\terror: ( jqXHR, status, error ) => {\r\n\t\t\t\t\tif ( this.loading.parentNode ) {\r\n\t\t\t\t\t\tthis.modal.removeChild( this.loading );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\treturn Jarvis;\r\n\r\n})( jQuery, _, Bloodhound );\r\n"]}